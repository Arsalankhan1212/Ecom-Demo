// Generated by view binder compiler. Do not edit!
package com.ngen.ecom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRatingBar;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.ngen.ecom.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView imgProduct;

  @NonNull
  public final AppCompatRatingBar ratingBar;

  @NonNull
  public final TextView tvPriceTitle;

  @NonNull
  public final TextView tvPriceValue;

  @NonNull
  public final AppCompatTextView tvProductBadge;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvTotalReviews;

  private ProductItemBinding(@NonNull MaterialCardView rootView, @NonNull ImageView imgProduct,
      @NonNull AppCompatRatingBar ratingBar, @NonNull TextView tvPriceTitle,
      @NonNull TextView tvPriceValue, @NonNull AppCompatTextView tvProductBadge,
      @NonNull TextView tvProductName, @NonNull TextView tvTotalReviews) {
    this.rootView = rootView;
    this.imgProduct = imgProduct;
    this.ratingBar = ratingBar;
    this.tvPriceTitle = tvPriceTitle;
    this.tvPriceValue = tvPriceValue;
    this.tvProductBadge = tvProductBadge;
    this.tvProductName = tvProductName;
    this.tvTotalReviews = tvTotalReviews;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgProduct;
      ImageView imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      AppCompatRatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.tvPriceTitle;
      TextView tvPriceTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPriceTitle == null) {
        break missingId;
      }

      id = R.id.tvPriceValue;
      TextView tvPriceValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPriceValue == null) {
        break missingId;
      }

      id = R.id.tvProductBadge;
      AppCompatTextView tvProductBadge = ViewBindings.findChildViewById(rootView, id);
      if (tvProductBadge == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tv_total_reviews;
      TextView tvTotalReviews = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalReviews == null) {
        break missingId;
      }

      return new ProductItemBinding((MaterialCardView) rootView, imgProduct, ratingBar,
          tvPriceTitle, tvPriceValue, tvProductBadge, tvProductName, tvTotalReviews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
