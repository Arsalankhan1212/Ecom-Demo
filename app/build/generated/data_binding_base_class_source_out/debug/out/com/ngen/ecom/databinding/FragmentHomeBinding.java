// Generated by view binder compiler. Do not edit!
package com.ngen.ecom.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ngen.ecom.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatEditText etSearch;

  @NonNull
  public final AppCompatImageView imgClearText;

  @NonNull
  public final AppCompatImageView imgSearchIcon;

  @NonNull
  public final LayoutErrorBinding layoutError;

  @NonNull
  public final LinearLayoutCompat layoutSearch;

  @NonNull
  public final RecyclerView recyclerView;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatEditText etSearch, @NonNull AppCompatImageView imgClearText,
      @NonNull AppCompatImageView imgSearchIcon, @NonNull LayoutErrorBinding layoutError,
      @NonNull LinearLayoutCompat layoutSearch, @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.etSearch = etSearch;
    this.imgClearText = imgClearText;
    this.imgSearchIcon = imgSearchIcon;
    this.layoutError = layoutError;
    this.layoutSearch = layoutSearch;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etSearch;
      AppCompatEditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.imgClearText;
      AppCompatImageView imgClearText = ViewBindings.findChildViewById(rootView, id);
      if (imgClearText == null) {
        break missingId;
      }

      id = R.id.imgSearchIcon;
      AppCompatImageView imgSearchIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgSearchIcon == null) {
        break missingId;
      }

      id = R.id.layoutError;
      View layoutError = ViewBindings.findChildViewById(rootView, id);
      if (layoutError == null) {
        break missingId;
      }
      LayoutErrorBinding binding_layoutError = LayoutErrorBinding.bind(layoutError);

      id = R.id.layoutSearch;
      LinearLayoutCompat layoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearch == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, etSearch, imgClearText,
          imgSearchIcon, binding_layoutError, layoutSearch, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
